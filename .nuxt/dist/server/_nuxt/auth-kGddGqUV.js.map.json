{"file":"auth-kGddGqUV.js","mappings":";;;AAKa,MAAA,eAAe,YAAY,QAAQ,MAAM;AAC9C,QAAA,kBAAkB,IAAI,KAAK;AACjC,QAAM,OAAO,IAAI;AAAA,IACf,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,UAAU;AAAA,IACV,aAAa;AAAA,IACb,MAAM;AAAA,EAAA,CACP;AAED,QAAM,SAAS,UAAU;AAEzB,QAAM,iBAAiB,MAAM;AACrB,UAAA,YAAY,aAAa,QAAQ,MAAM;AACvC,UAAA,QAAQ,aAAa,QAAQ,OAAO;AAE1C,QAAI,aAAa,OAAO;AACtB,sBAAgB,QAAQ;AACnB,WAAA,QAAQ,KAAK,MAAM,SAAS;AAAA,IAAA;AAAA,EAErC;AAEM,QAAA,QAAQ,CAAC,aAAa;AAC1B,oBAAgB,QAAQ;AACxB,SAAK,QAAQ;AAAA,MACX,IAAI,SAAS,KAAK;AAAA,MAClB,OAAO,SAAS,KAAK;AAAA,MACrB,UAAU,SAAS,KAAK;AAAA,MACxB,aAAa,SAAS,KAAK;AAAA,MAC3B,MAAM,SAAS,KAAK;AAAA,IACtB;AACA,iBAAa,QAAQ,QAAQ,KAAK,UAAU,KAAK,KAAK,CAAC;AAC1C,iBAAA,QAAQ,SAAS,SAAS,KAAK;AAExC,QAAA,SAAS,KAAK,SAAS,SAAS;AAClC,aAAO,KAAK,QAAQ;AAAA,IAAA,OACf;AACL,aAAO,KAAK,GAAG;AAAA,IAAA;AAAA,EAEnB;AAEA,QAAM,SAAS,MAAM;AACnB,oBAAgB,QAAQ;AACxB,SAAK,QAAQ;AAAA,MACX,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,UAAU;AAAA,MACV,aAAa;AAAA,MACb,MAAM;AAAA,IACR;AACA,iBAAa,WAAW,MAAM;AAC9B,iBAAa,WAAW,OAAO;AAC/B,WAAO,KAAK,GAAG;AAAA,EACjB;AAEA,QAAM,UAAU,SAAS,MAAA;;AAAM,uBAAK,UAAL,mBAAY,UAAS;AAAA,GAAO;AAEpD,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;","names":[],"sources":["../../../../stores/auth.ts"],"sourcesContent":["// store/auth.ts\nimport { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\n\nexport const useAuthStore = defineStore('auth', () => {\n  const isAuthenticated = ref(false);\n  const user = ref({\n    id: null,\n    email: '',\n    fullname: '',\n    phoneNumber: '',\n    role: '',\n  });\n\n  const router = useRouter();\n\n  const initializeAuth = () => {\n    const savedUser = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n\n    if (savedUser && token) {\n      isAuthenticated.value = true;\n      user.value = JSON.parse(savedUser);\n    }\n  };\n\n  const login = (userData) => {\n    isAuthenticated.value = true;\n    user.value = {\n      id: userData.user.id,\n      email: userData.user.email,\n      fullname: userData.user.fullname,\n      phoneNumber: userData.user.phoneNumber,\n      role: userData.user.role,\n    };\n    localStorage.setItem('user', JSON.stringify(user.value));\n    localStorage.setItem('token', userData.token);\n\n    if (userData.user.role === 'admin') {\n      router.push('/admin');\n    } else {\n      router.push('/');\n    }\n  };\n\n  const logout = () => {\n    isAuthenticated.value = false;\n    user.value = {\n      id: null,\n      email: '',\n      fullname: '',\n      phoneNumber: '',\n      role: '',\n    };\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    router.push('/');\n  };\n\n  const isAdmin = computed(() => user.value?.role === 'admin');\n\n  return {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n    initializeAuth,\n    isAdmin,\n  };\n});"],"version":3}